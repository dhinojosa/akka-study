# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka -{
  # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
  event-handlers = ["akka.event.Logging$DefaultLogger"]

  # Log level used by the configured loggers (see "event-handlers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = INFO

  # Log level for the very basic logger activated during AkkaApplication startup
  # Options: ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = INFO

  actor {
    provider = "akka.actor.LocalActorRefProvider"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }

    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
  }

  remote {
    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on

    # If this is "on", Akka will log all inbound messages at DEBUG level,
    # if off then they are not logged
    log-received-messages = on
  }
}

daemonized {
  daemonic = on
}

routing-system {
  akka.actor.deployment {
     /simplerouter {
        router = round-robin-pool
        nr-of-instances = 5
     }
  }
}

remote-system-alpha {
   akka {
      actor {
         provider = "akka.remote.RemoteActorRefProvider"
         deployment {
             /simpleActorScala {
               remote = "akka.tcp://actorSystemBeta@127.0.0.1:10190"
             }

             /simpleActorJava {
               remote = "akka.tcp://actorSystemBeta@127.0.0.1:10190"
             }
         }
      }
      remote {
         # If this is "on", Akka will log all outbound messages at DEBUG level,
         # if off then they are not logged
         log-sent-messages = on

         # If this is "on", Akka will log all inbound messages at DEBUG level,
         # if off then they are not logged
         log-received-messages = on

         log-remote-lifecycle-events = on

         enabled-transports = ["akka.remote.netty.tcp"]

         netty.tcp {
             hostname = "127.0.0.1"
             port = 10191
         }
      }
   }
}

remote-system-beta {
   akka {
      actor {
           provider = "akka.remote.RemoteActorRefProvider"
      }
      remote {
         # If this is "on", Akka will log all outbound messages at DEBUG level,
         # if off then they are not logged
         log-sent-messages = on

         # If this is "on", Akka will log all inbound messages at DEBUG level,
         # if off then they are not logged
         log-received-messages = on

         log-remote-lifecycle-events = on

         enabled-transports = ["akka.remote.netty.tcp"]

         netty.tcp {
             hostname = "127.0.0.1"
             port = 10190
         }
      }
   }
}

remote-system {
  akka {
    actor {
       provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
       # If this is "on", Akka will log all outbound messages at DEBUG level,
       # if off then they are not logged
       log-sent-messages = on

       # If this is "on", Akka will log all inbound messages at DEBUG level,
       # if off then they are not logged
       log-received-messages = on

       log-remote-lifecycle-events = on

       enabled-transports = ["akka.remote.netty.tcp"]

       netty.tcp {
         hostname = "127.0.0.1"
         port = 10190
       }
    }
  }
}

cluster-router {
   akka {
      actor {
         provider = "akka.cluster.ClusterActorRefProvider"
         debug {
            receive = on
            lifecycle = off
         }

         deployment {
            /clusterwide/router {
               router = consistent-hashing-group
               nr-of-instances = 16
               routees.paths = ["/user/sessionManager"]
               cluster {
                  enabled = on
                  allow-local-routees = on
               }
            }
         }
      }
      remote {
         # If this is "on", Akka will log all outbound messages at DEBUG level,
         # if off then they are not logged
         log-sent-messages = on

         # If this is "on", Akka will log all inbound messages at DEBUG level,
         # if off then they are not logged
         log-received-messages = on

         log-remote-lifecycle-events = on

         enabled-transports = ["akka.remote.netty.tcp"]

         netty.tcp {
            hostname = "127.0.0.1"
            port = 10190
         }
      }
      cluster {
         min-nr-of-members = 2
         auto-down-unreachable-after = 10s

         seed-nodes = [
            "akka.tcp://system@127.0.0.1:2551"
            "akka.tcp://system@127.0.0.1:2552"
         ]
      }
   }
}